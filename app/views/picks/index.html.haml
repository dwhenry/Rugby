.header
  Picked a Winner?

= form_for Pick.new do |f|
  .pick_row.row_header
    .name
      Match
      = f.submit 'Update'
    .pool
      &nbsp;
    .time
      Time
    .pick
      (Average Pick)

  - @picks.each do |pick|
    = fields_for "picks[]", pick do |p|
      = p.hidden_field :match_id
      .pick_row
        .name{:title => pick.match.full_name}
          - if pick.can_set?
            = p.label :home_team, 'Home', :style => 'display: none;'
            = p.text_field :home_team, {:class => 'home_team', :onchange => 'clear_other(this)'}
            = pick.match.match
            = p.label :away_team, 'Away', :style => 'display: none;'
            = p.text_field :away_team, {:class => 'away_team', :onchange => 'clear_other(this)'}
          - elsif pick.match.match_date <= Date.today
            = pick.match.match
            = "(#{pick.description_with(pick.pick)})"
          - else
            = pick.match.match
        .pool
          = pick.match.home_team.try(:pool) || pick.match.description
        .time
          = "#{pick.match.kick_off.to_s.gsub(/\./,':')}0"
          = pick.match.match_date.try(:strftime, '%d-%b-%Y')
        .pick
          = pick.details
        - if pick.error_messages
          .errors
            = pick.error_messages.join('<br>')

